@import "divider-fix";
@import "@material/elevation/mixins";
@import "@material/list/mixins";
@import "@material/theme/mixins";
@import "@material/theme/functions";
@import "@material/toolbar/mixins";
@import "@material/ripple/mixins";

body {
  background-image: var(--bg, url("https://storage.googleapis.com/g-design/static/wallpaper-kleiner-google-blue.jpg"));
  background-color: #fafafa;
}

html {
  height:100%;
  width:100%;
}

body {
  display: flex;
  flex-direction: column;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-size: cover;       
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
}

button:focus {
  outline: 0;
}

*:not(.material-icons) {
  font-family: var(--font, Roboto) !important;
}
  
.content {
  height: 100%;
  position: relative;
}

@include mdc-list-group-subheader-ink-color(text-secondary-on-background);

.mdc-menu {
  @include mdc-theme-prop(background-color, background);
}

.mdc-toolbar {
  @include mdc-toolbar-fill-color(primary);
  
  @include mdc-toolbar-ink-color(text-primary-on-primary);
  
  &__section--center {
    align-items: center;
  }
}

.settings-dialog {
  .mdc-dialog__surface {
    min-width: initial;
    max-width: 480px;
    @include mdc-theme-prop(color, text-primary-on-background);
  }
  .mdc-tab {
    @include mdc-theme-prop(color, text-secondary-on-background);
    &:hover, &--active {
      @include mdc-theme-prop(color, text-primary-on-background);
    }
    &.mdc-ripple-upgraded {
      @include mdc-states(text-primary-on-background);
    }
    &-bar {
      margin-top: 20px;
      transform: scale(1.25);
      transition: transform 0s 120ms;
    }
  }
  .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background {
    @include mdc-theme-prop(border-color, text-secondary-on-background);
  }
  &.mdc-dialog--open .mdc-tab-bar {
    transform: scale(1);
    transition: transform 0s 0ms;
  }
  &__body {
    overflow-x: hidden;
    overflow-y: auto;
    padding: 0;
    padding-top: 20px;
    margin-top: 0;
    box-sizing: border-box;
    height: 360px;
    min-height: 360px;
    max-height: 360px;
    padding-top: 8px;
  }
  &__panels {
    display: flex;
  }
  &__panel {
    min-width: 100%;
    max-width: 480px;
    padding: 0 24px;
    box-sizing: border-box;
    transition: transform 120ms 0ms cubic-bezier(.4, 0, .2, 1);
    max-height: 330px;
    &--active {
      display: block;
      max-height: none;
    }
  }
  &__radio-list {
    display: flex;
    flex-direction: column;
    padding-left: 24px;
  }
  .mdc-list-item {
    padding: 0;
  }
  .mdc-form-field {
    @include mdc-theme-prop(color, text-primary-on-background);
    .mdc-radio .mdc-radio__native-control:enabled:not(:checked) + .mdc-radio__background .mdc-radio__outer-circle {
      @include mdc-theme-prop(border-color, text-secondary-on-background);
    }
  }
  .mCS-minimal-dark.mCSB_scrollTools .mCSB_dragger .mCSB_dragger_bar {
    @include mdc-theme-divider-prop(background-color, divider-on-background);
  }
  .mCS-minimal-dark.mCSB_scrollTools .mCSB_dragger:active .mCSB_dragger_bar,
	.mCS-minimal-dark.mCSB_scrollTools .mCSB_dragger.mCSB_dragger_onDrag .mCSB_dragger_bar{
    @include mdc-theme-prop(background-color, text-hint-on-background);
  }
  .mdc-expansion__header {
    flex-direction: row; 
    align-items: center; 
    font-size: 1rem;
    font-weight: 400;
    min-width: 100%;
    justify-content: flex-start;
  }
  .mdc-expansion__summary {
    overflow: visible;
    
    &::after {
      position: relative;
      left: -40px;
    }
  }
  .mdc-expansion[open] .mdc-expansion__summary {
    height: 48px !important;
  }
  
  .mdc-expansion .mdc-expansion__summary:focus {
    background-color: rgba(0,0,0,0) !important;
  }
  
  .mdc-expansion__content {
    padding: 0;
    .mdc-list-item {
      padding: 0 16px 0 72px;
    }
  }
  .mdc-list-group__subheader {
    margin: 0.75rem 0;
  }
}

.taskbar {
  @include mdc-elevation(4);
  position: fixed;
  width: 100%;
  bottom: 0;
  z-index: 5;
  height: var(--taskbar-height, 40px);
  transition: width 300ms 0ms cubic-bezier(.4, 0, .2, 1);
}